import os
import random
import asyncio
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from cards import cards  # —ñ–º–ø–æ—Ä—Ç—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç –∑ —ñ–Ω—à–æ–≥–æ —Ñ–∞–π–ª—É

card = random.choice(cards)

# –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
def format_card_message(card):
    return (
        f"üÉè**{card['name']}**\n\n"
        f"‚ú®**–ö–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞:** {card['keywords']}\n\n"
        f"üìú**–ó–Ω–∞—á–µ–Ω–Ω—è:** {card['meaning']}\n\n"
        f"üí° **–ü–æ—Ä–∞–¥–∞ –¥–Ω—è:** {card['advice']}"
    )

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = ReplyKeyboardMarkup(
        [[KeyboardButton("–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ä—Ç—É –¥–Ω—è")]],
        resize_keyboard=True
    )
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ä—Ç—É –¥–Ω—è.",
        reply_markup=keyboard
    )

# –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤–∏–ø–∞–¥–∫–æ–≤–æ—ó –∫–∞—Ä—Ç–∏
async def send_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    card = random.choice(cards)
    await update.message.reply_photo(
        photo=card['image'],
        caption=format_card_message(card),
        parse_mode="Markdown"
    )

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def main():
    token = os.getenv("BOT_TOKEN")
    if not token:
        raise ValueError("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ –∑–º—ñ–Ω–Ω—ñ–π BOT_TOKEN")

    app = Application.builder().token(token).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("card", send_card))
    app.add_handler(MessageHandler(filters.Regex("^–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ä—Ç—É –¥–Ω—è$"), send_card))

    async def run():
        # –í–∏–¥–∞–ª—è—î–º–æ –≤–µ–±—Ö—É–∫ —ñ —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞—Ä—ñ –∞–ø–¥–µ–π—Ç–∏ –ø–µ—Ä–µ–¥ polling
        await app.bot.delete_webhook(drop_pending_updates=True)
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π...")
        await app.run_polling(allowed_updates=Update.ALL_TYPES, poll_interval=1.0)

    asyncio.run(run())

if __name__ == "__main__":
    main()
